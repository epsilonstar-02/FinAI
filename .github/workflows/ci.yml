name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly run on Sundays at 00:00 UTC

permissions:
  contents: write
  pull-requests: write

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11']

    env:
      PYTHON_VERSION: ${{ matrix.python-version }}
      PYTHONPATH: ${{ github.workspace }}
      ALPHAVANTAGE_KEY: ${{ secrets.ALPHAVANTAGE_API_KEY || 'test-key' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            requirements*.txt
            **/requirements*.txt

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential \
            python3-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          # Install module-specific requirements
          pip install -r agents/api_agent/requirements.txt
          pip install -r agents/scraping_agent/requirements-scraping.txt
          pip install -r streamlit_app/requirements-streamlit.txt
          pip install -r tests/requirements-test.txt

      # Fixed: Always set Git identity (removed pull_request condition)
      - name: Set up Git identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      # Linting steps removed as requested

      - name: Run security checks
        run: |
          pip install safety bandit
          safety check --full-report
          bandit -r . -x ./venv

      - name: Run tests with coverage
        run: |
          pip install pytest-cov
          pytest \
            --cov=agents \
            --cov-report=xml \
            --cov-report=term \
            --cov-fail-under=80 \
            -v tests/

      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: false